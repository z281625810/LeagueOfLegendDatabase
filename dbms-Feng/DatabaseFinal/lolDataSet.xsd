<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="lolDataSet" targetNamespace="http://tempuri.org/lolDataSet.xsd" xmlns:mstns="http://tempuri.org/lolDataSet.xsd" xmlns="http://tempuri.org/lolDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="lolConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="lolConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DatabaseFinal.Properties.Settings.GlobalReference.Default.lolConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ChampionBasicTableAdapter" GeneratorDataComponentClassName="ChampionBasicTableAdapter" Name="ChampionBasic" UserDataComponentName="ChampionBasicTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="lolConnectionString (Settings)" DbObjectName="dbo.ChampionBasic" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ChampionBasic] WHERE (([chName] = @Original_chName) AND ((@IsNull_chDescription = 1 AND [chDescription] IS NULL) OR ([chDescription] = @Original_chDescription)) AND ((@IsNull_chGender = 1 AND [chGender] IS NULL) OR ([chGender] = @Original_chGender)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_chDescription" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chDescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_chDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_chGender" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chGender" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_chGender" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="chGender" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ChampionBasic] ([chName], [chDescription], [chGender]) VALUES (@chName, @chDescription, @chGender);
SELECT chName, chDescription, chGender FROM ChampionBasic WHERE (chName = @chName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@chDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@chGender" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="chGender" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT chName, chDescription, chGender FROM dbo.ChampionBasic</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ChampionBasic] SET [chName] = @chName, [chDescription] = @chDescription, [chGender] = @chGender WHERE (([chName] = @Original_chName) AND ((@IsNull_chDescription = 1 AND [chDescription] IS NULL) OR ([chDescription] = @Original_chDescription)) AND ((@IsNull_chGender = 1 AND [chGender] IS NULL) OR ([chGender] = @Original_chGender)));
SELECT chName, chDescription, chGender FROM ChampionBasic WHERE (chName = @chName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@chDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@chGender" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="chGender" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_chDescription" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chDescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_chDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_chGender" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chGender" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_chGender" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="chGender" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="chName" DataSetColumn="chName" />
              <Mapping SourceColumn="chDescription" DataSetColumn="chDescription" />
              <Mapping SourceColumn="chGender" DataSetColumn="chGender" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ChampionStatsTableAdapter" GeneratorDataComponentClassName="ChampionStatsTableAdapter" Name="ChampionStats" UserDataComponentName="ChampionStatsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="lolConnectionString (Settings)" DbObjectName="dbo.ChampionStats" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ChampionStats] WHERE (([chName] = @Original_chName) AND ((@IsNull_chHealth = 1 AND [chHealth] IS NULL) OR ([chHealth] = @Original_chHealth)) AND ((@IsNull_chAttack = 1 AND [chAttack] IS NULL) OR ([chAttack] = @Original_chAttack)) AND ((@IsNull_chRange = 1 AND [chRange] IS NULL) OR ([chRange] = @Original_chRange)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_chHealth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chHealth" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_chHealth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chHealth" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_chAttack" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chAttack" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_chAttack" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chAttack" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_chRange" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chRange" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_chRange" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chRange" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ChampionStats] ([chName], [chHealth], [chAttack], [chRange]) VALUES (@chName, @chHealth, @chAttack, @chRange);
SELECT chName, chHealth, chAttack, chRange FROM ChampionStats WHERE (chName = @chName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@chHealth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chHealth" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@chAttack" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chAttack" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@chRange" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chRange" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT chName, chHealth, chAttack, chRange FROM dbo.ChampionStats</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ChampionStats] SET [chName] = @chName, [chHealth] = @chHealth, [chAttack] = @chAttack, [chRange] = @chRange WHERE (([chName] = @Original_chName) AND ((@IsNull_chHealth = 1 AND [chHealth] IS NULL) OR ([chHealth] = @Original_chHealth)) AND ((@IsNull_chAttack = 1 AND [chAttack] IS NULL) OR ([chAttack] = @Original_chAttack)) AND ((@IsNull_chRange = 1 AND [chRange] IS NULL) OR ([chRange] = @Original_chRange)));
SELECT chName, chHealth, chAttack, chRange FROM ChampionStats WHERE (chName = @chName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@chHealth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chHealth" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@chAttack" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chAttack" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@chRange" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chRange" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_chHealth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chHealth" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_chHealth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chHealth" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_chAttack" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chAttack" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_chAttack" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chAttack" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_chRange" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chRange" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_chRange" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="chRange" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="chName" DataSetColumn="chName" />
              <Mapping SourceColumn="chHealth" DataSetColumn="chHealth" />
              <Mapping SourceColumn="chAttack" DataSetColumn="chAttack" />
              <Mapping SourceColumn="chRange" DataSetColumn="chRange" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ChampTypeTableAdapter" GeneratorDataComponentClassName="ChampTypeTableAdapter" Name="ChampType" UserDataComponentName="ChampTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="lolConnectionString (Settings)" DbObjectName="dbo.ChampType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ChampType] WHERE (([tID] = @Original_tID) AND ((@IsNull_tName = 1 AND [tName] IS NULL) OR ([tName] = @Original_tName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_tName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_tName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ChampType] ([tID], [tName]) VALUES (@tID, @tName);
SELECT tID, tName FROM ChampType WHERE (tID = @tID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@tID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@tName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT tID, tName FROM dbo.ChampType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ChampType] SET [tID] = @tID, [tName] = @tName WHERE (([tID] = @Original_tID) AND ((@IsNull_tName = 1 AND [tName] IS NULL) OR ([tName] = @Original_tName)));
SELECT tID, tName FROM ChampType WHERE (tID = @tID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@tID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@tName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_tName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_tName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="tName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="tID" DataSetColumn="tID" />
              <Mapping SourceColumn="tName" DataSetColumn="tName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ChampTypeOfTableAdapter" GeneratorDataComponentClassName="ChampTypeOfTableAdapter" Name="ChampTypeOf" UserDataComponentName="ChampTypeOfTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="lolConnectionString (Settings)" DbObjectName="dbo.ChampTypeOf" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ChampTypeOf] WHERE (([chName] = @Original_chName) AND ([tID] = @Original_tID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ChampTypeOf] ([chName], [tID]) VALUES (@chName, @tID);
SELECT chName, tID FROM ChampTypeOf WHERE (chName = @chName) AND (tID = @tID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@tID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT chName, tID FROM dbo.ChampTypeOf</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ChampTypeOf] SET [chName] = @chName, [tID] = @tID WHERE (([chName] = @Original_chName) AND ([tID] = @Original_tID));
SELECT chName, tID FROM ChampTypeOf WHERE (chName = @chName) AND (tID = @tID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@tID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="chName" DataSetColumn="chName" />
              <Mapping SourceColumn="tID" DataSetColumn="tID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EquipmentTableAdapter" GeneratorDataComponentClassName="EquipmentTableAdapter" Name="Equipment" UserDataComponentName="EquipmentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="lolConnectionString (Settings)" DbObjectName="dbo.Equipment" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Equipment] WHERE (([eqName] = @Original_eqName) AND ((@IsNull_eqDescription = 1 AND [eqDescription] IS NULL) OR ([eqDescription] = @Original_eqDescription)) AND ((@IsNull_eqStat = 1 AND [eqStat] IS NULL) OR ([eqStat] = @Original_eqStat)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_eqName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_eqDescription" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eqDescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_eqDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_eqStat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eqStat" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_eqStat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqStat" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Equipment] ([eqName], [eqDescription], [eqStat]) VALUES (@eqName, @eqDescription, @eqStat);
SELECT eqName, eqDescription, eqStat FROM Equipment WHERE (eqName = @eqName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@eqName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@eqDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@eqStat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqStat" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT eqName, eqDescription, eqStat FROM dbo.Equipment</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Equipment] SET [eqName] = @eqName, [eqDescription] = @eqDescription, [eqStat] = @eqStat WHERE (([eqName] = @Original_eqName) AND ((@IsNull_eqDescription = 1 AND [eqDescription] IS NULL) OR ([eqDescription] = @Original_eqDescription)) AND ((@IsNull_eqStat = 1 AND [eqStat] IS NULL) OR ([eqStat] = @Original_eqStat)));
SELECT eqName, eqDescription, eqStat FROM Equipment WHERE (eqName = @eqName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@eqName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@eqDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@eqStat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqStat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_eqName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_eqDescription" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eqDescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_eqDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_eqStat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eqStat" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_eqStat" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqStat" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="eqName" DataSetColumn="eqName" />
              <Mapping SourceColumn="eqDescription" DataSetColumn="eqDescription" />
              <Mapping SourceColumn="eqStat" DataSetColumn="eqStat" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EquippedTableAdapter" GeneratorDataComponentClassName="EquippedTableAdapter" Name="Equipped" UserDataComponentName="EquippedTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="lolConnectionString (Settings)" DbObjectName="dbo.Equipped" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Equipped] WHERE (([chName] = @Original_chName) AND ([eqName] = @Original_eqName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_eqName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Equipped] ([chName], [eqName]) VALUES (@chName, @eqName);
SELECT chName, eqName FROM Equipped WHERE (chName = @chName) AND (eqName = @eqName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@eqName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT chName, eqName FROM dbo.Equipped</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Equipped] SET [chName] = @chName, [eqName] = @eqName WHERE (([chName] = @Original_chName) AND ([eqName] = @Original_eqName));
SELECT chName, eqName FROM Equipped WHERE (chName = @chName) AND (eqName = @eqName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@eqName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_eqName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="chName" DataSetColumn="chName" />
              <Mapping SourceColumn="eqName" DataSetColumn="eqName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EquipTypeTableAdapter" GeneratorDataComponentClassName="EquipTypeTableAdapter" Name="EquipType" UserDataComponentName="EquipTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="lolConnectionString (Settings)" DbObjectName="dbo.EquipType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[EquipType] WHERE (([eqID] = @Original_eqID) AND ((@IsNull_eName = 1 AND [eName] IS NULL) OR ([eName] = @Original_eName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_eqID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eqID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_eName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_eName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[EquipType] ([eqID], [eName]) VALUES (@eqID, @eName);
SELECT eqID, eName FROM EquipType WHERE (eqID = @eqID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@eqID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eqID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@eName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT eqID, eName FROM dbo.EquipType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[EquipType] SET [eqID] = @eqID, [eName] = @eName WHERE (([eqID] = @Original_eqID) AND ((@IsNull_eName = 1 AND [eName] IS NULL) OR ([eName] = @Original_eName)));
SELECT eqID, eName FROM EquipType WHERE (eqID = @eqID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@eqID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eqID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@eName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_eqID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eqID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_eName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_eName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="eqID" DataSetColumn="eqID" />
              <Mapping SourceColumn="eName" DataSetColumn="eName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EquipTypeOfTableAdapter" GeneratorDataComponentClassName="EquipTypeOfTableAdapter" Name="EquipTypeOf" UserDataComponentName="EquipTypeOfTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="lolConnectionString (Settings)" DbObjectName="dbo.EquipTypeOf" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[EquipTypeOf] WHERE (([eqName] = @Original_eqName) AND ([eqID] = @Original_eqID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_eqName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_eqID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eqID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[EquipTypeOf] ([eqName], [eqID]) VALUES (@eqName, @eqID);
SELECT eqName, eqID FROM EquipTypeOf WHERE (eqID = @eqID) AND (eqName = @eqName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@eqName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@eqID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eqID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT eqName, eqID FROM dbo.EquipTypeOf</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[EquipTypeOf] SET [eqName] = @eqName, [eqID] = @eqID WHERE (([eqName] = @Original_eqName) AND ([eqID] = @Original_eqID));
SELECT eqName, eqID FROM EquipTypeOf WHERE (eqID = @eqID) AND (eqName = @eqName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@eqName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@eqID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eqID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_eqName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="eqName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_eqID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="eqID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="eqName" DataSetColumn="eqName" />
              <Mapping SourceColumn="eqID" DataSetColumn="eqID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="HaveSkillOfTableAdapter" GeneratorDataComponentClassName="HaveSkillOfTableAdapter" Name="HaveSkillOf" UserDataComponentName="HaveSkillOfTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="lolConnectionString (Settings)" DbObjectName="dbo.HaveSkillOf" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[HaveSkillOf] WHERE (([chName] = @Original_chName) AND ([skName] = @Original_skName) AND ((@IsNull_skillNum = 1 AND [skillNum] IS NULL) OR ([skillNum] = @Original_skillNum)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_skName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="skName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_skillNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skillNum" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_skillNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skillNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[HaveSkillOf] ([chName], [skName], [skillNum]) VALUES (@chName, @skName, @skillNum);
SELECT chName, skName, skillNum FROM HaveSkillOf WHERE (chName = @chName) AND (skName = @skName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@skName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="skName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@skillNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skillNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT chName, skName, skillNum FROM dbo.HaveSkillOf</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[HaveSkillOf] SET [chName] = @chName, [skName] = @skName, [skillNum] = @skillNum WHERE (([chName] = @Original_chName) AND ([skName] = @Original_skName) AND ((@IsNull_skillNum = 1 AND [skillNum] IS NULL) OR ([skillNum] = @Original_skillNum)));
SELECT chName, skName, skillNum FROM HaveSkillOf WHERE (chName = @chName) AND (skName = @skName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@skName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="skName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@skillNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skillNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_chName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="chName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_skName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="skName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_skillNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skillNum" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_skillNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skillNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="chName" DataSetColumn="chName" />
              <Mapping SourceColumn="skName" DataSetColumn="skName" />
              <Mapping SourceColumn="skillNum" DataSetColumn="skillNum" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SkillsTableAdapter" GeneratorDataComponentClassName="SkillsTableAdapter" Name="Skills" UserDataComponentName="SkillsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="lolConnectionString (Settings)" DbObjectName="dbo.Skills" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Skills] WHERE (([skName] = @Original_skName) AND ((@IsNull_skType = 1 AND [skType] IS NULL) OR ([skType] = @Original_skType)) AND ((@IsNull_skDamage = 1 AND [skDamage] IS NULL) OR ([skDamage] = @Original_skDamage)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_skName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="skName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_skType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skType" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_skType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="skType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_skDamage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skDamage" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_skDamage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skDamage" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Skills] ([skName], [skType], [skDamage]) VALUES (@skName, @skType, @skDamage);
SELECT skName, skType, skDamage FROM Skills WHERE (skName = @skName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@skName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="skName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@skType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="skType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@skDamage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skDamage" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT skName, skType, skDamage FROM dbo.Skills</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Skills] SET [skName] = @skName, [skType] = @skType, [skDamage] = @skDamage WHERE (([skName] = @Original_skName) AND ((@IsNull_skType = 1 AND [skType] IS NULL) OR ([skType] = @Original_skType)) AND ((@IsNull_skDamage = 1 AND [skDamage] IS NULL) OR ([skDamage] = @Original_skDamage)));
SELECT skName, skType, skDamage FROM Skills WHERE (skName = @skName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@skName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="skName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@skType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="skType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@skDamage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skDamage" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_skName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="skName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_skType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skType" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_skType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="skType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_skDamage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skDamage" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_skDamage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skDamage" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="skName" DataSetColumn="skName" />
              <Mapping SourceColumn="skType" DataSetColumn="skType" />
              <Mapping SourceColumn="skDamage" DataSetColumn="skDamage" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="lolDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="lolDataSet" msprop:Generator_UserDSName="lolDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ChampionBasic" msprop:Generator_TableClassName="ChampionBasicDataTable" msprop:Generator_TableVarName="tableChampionBasic" msprop:Generator_TablePropName="ChampionBasic" msprop:Generator_RowDeletingName="ChampionBasicRowDeleting" msprop:Generator_RowChangingName="ChampionBasicRowChanging" msprop:Generator_RowEvHandlerName="ChampionBasicRowChangeEventHandler" msprop:Generator_RowDeletedName="ChampionBasicRowDeleted" msprop:Generator_UserTableName="ChampionBasic" msprop:Generator_RowChangedName="ChampionBasicRowChanged" msprop:Generator_RowEvArgName="ChampionBasicRowChangeEvent" msprop:Generator_RowClassName="ChampionBasicRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="chName" msprop:Generator_ColumnVarNameInTable="columnchName" msprop:Generator_ColumnPropNameInRow="chName" msprop:Generator_ColumnPropNameInTable="chNameColumn" msprop:Generator_UserColumnName="chName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="chDescription" msprop:Generator_ColumnVarNameInTable="columnchDescription" msprop:Generator_ColumnPropNameInRow="chDescription" msprop:Generator_ColumnPropNameInTable="chDescriptionColumn" msprop:Generator_UserColumnName="chDescription" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="chGender" msprop:Generator_ColumnVarNameInTable="columnchGender" msprop:Generator_ColumnPropNameInRow="chGender" msprop:Generator_ColumnPropNameInTable="chGenderColumn" msprop:Generator_UserColumnName="chGender" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ChampionStats" msprop:Generator_TableClassName="ChampionStatsDataTable" msprop:Generator_TableVarName="tableChampionStats" msprop:Generator_TablePropName="ChampionStats" msprop:Generator_RowDeletingName="ChampionStatsRowDeleting" msprop:Generator_RowChangingName="ChampionStatsRowChanging" msprop:Generator_RowEvHandlerName="ChampionStatsRowChangeEventHandler" msprop:Generator_RowDeletedName="ChampionStatsRowDeleted" msprop:Generator_UserTableName="ChampionStats" msprop:Generator_RowChangedName="ChampionStatsRowChanged" msprop:Generator_RowEvArgName="ChampionStatsRowChangeEvent" msprop:Generator_RowClassName="ChampionStatsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="chName" msprop:Generator_ColumnVarNameInTable="columnchName" msprop:Generator_ColumnPropNameInRow="chName" msprop:Generator_ColumnPropNameInTable="chNameColumn" msprop:Generator_UserColumnName="chName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="chHealth" msprop:Generator_ColumnVarNameInTable="columnchHealth" msprop:Generator_ColumnPropNameInRow="chHealth" msprop:Generator_ColumnPropNameInTable="chHealthColumn" msprop:Generator_UserColumnName="chHealth" type="xs:int" minOccurs="0" />
              <xs:element name="chAttack" msprop:Generator_ColumnVarNameInTable="columnchAttack" msprop:Generator_ColumnPropNameInRow="chAttack" msprop:Generator_ColumnPropNameInTable="chAttackColumn" msprop:Generator_UserColumnName="chAttack" type="xs:int" minOccurs="0" />
              <xs:element name="chRange" msprop:Generator_ColumnVarNameInTable="columnchRange" msprop:Generator_ColumnPropNameInRow="chRange" msprop:Generator_ColumnPropNameInTable="chRangeColumn" msprop:Generator_UserColumnName="chRange" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ChampType" msprop:Generator_TableClassName="ChampTypeDataTable" msprop:Generator_TableVarName="tableChampType" msprop:Generator_TablePropName="ChampType" msprop:Generator_RowDeletingName="ChampTypeRowDeleting" msprop:Generator_RowChangingName="ChampTypeRowChanging" msprop:Generator_RowEvHandlerName="ChampTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="ChampTypeRowDeleted" msprop:Generator_UserTableName="ChampType" msprop:Generator_RowChangedName="ChampTypeRowChanged" msprop:Generator_RowEvArgName="ChampTypeRowChangeEvent" msprop:Generator_RowClassName="ChampTypeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="tID" msprop:Generator_ColumnVarNameInTable="columntID" msprop:Generator_ColumnPropNameInRow="tID" msprop:Generator_ColumnPropNameInTable="tIDColumn" msprop:Generator_UserColumnName="tID" type="xs:int" />
              <xs:element name="tName" msprop:Generator_ColumnVarNameInTable="columntName" msprop:Generator_ColumnPropNameInRow="tName" msprop:Generator_ColumnPropNameInTable="tNameColumn" msprop:Generator_UserColumnName="tName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ChampTypeOf" msprop:Generator_TableClassName="ChampTypeOfDataTable" msprop:Generator_TableVarName="tableChampTypeOf" msprop:Generator_TablePropName="ChampTypeOf" msprop:Generator_RowDeletingName="ChampTypeOfRowDeleting" msprop:Generator_RowChangingName="ChampTypeOfRowChanging" msprop:Generator_RowEvHandlerName="ChampTypeOfRowChangeEventHandler" msprop:Generator_RowDeletedName="ChampTypeOfRowDeleted" msprop:Generator_UserTableName="ChampTypeOf" msprop:Generator_RowChangedName="ChampTypeOfRowChanged" msprop:Generator_RowEvArgName="ChampTypeOfRowChangeEvent" msprop:Generator_RowClassName="ChampTypeOfRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="chName" msprop:Generator_ColumnVarNameInTable="columnchName" msprop:Generator_ColumnPropNameInRow="chName" msprop:Generator_ColumnPropNameInTable="chNameColumn" msprop:Generator_UserColumnName="chName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="tID" msprop:Generator_ColumnVarNameInTable="columntID" msprop:Generator_ColumnPropNameInRow="tID" msprop:Generator_ColumnPropNameInTable="tIDColumn" msprop:Generator_UserColumnName="tID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Equipment" msprop:Generator_TableClassName="EquipmentDataTable" msprop:Generator_TableVarName="tableEquipment" msprop:Generator_TablePropName="Equipment" msprop:Generator_RowDeletingName="EquipmentRowDeleting" msprop:Generator_RowChangingName="EquipmentRowChanging" msprop:Generator_RowEvHandlerName="EquipmentRowChangeEventHandler" msprop:Generator_RowDeletedName="EquipmentRowDeleted" msprop:Generator_UserTableName="Equipment" msprop:Generator_RowChangedName="EquipmentRowChanged" msprop:Generator_RowEvArgName="EquipmentRowChangeEvent" msprop:Generator_RowClassName="EquipmentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="eqName" msprop:Generator_ColumnVarNameInTable="columneqName" msprop:Generator_ColumnPropNameInRow="eqName" msprop:Generator_ColumnPropNameInTable="eqNameColumn" msprop:Generator_UserColumnName="eqName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="eqDescription" msprop:Generator_ColumnVarNameInTable="columneqDescription" msprop:Generator_ColumnPropNameInRow="eqDescription" msprop:Generator_ColumnPropNameInTable="eqDescriptionColumn" msprop:Generator_UserColumnName="eqDescription" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="400" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="eqStat" msprop:Generator_ColumnVarNameInTable="columneqStat" msprop:Generator_ColumnPropNameInRow="eqStat" msprop:Generator_ColumnPropNameInTable="eqStatColumn" msprop:Generator_UserColumnName="eqStat" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="300" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Equipped" msprop:Generator_TableClassName="EquippedDataTable" msprop:Generator_TableVarName="tableEquipped" msprop:Generator_TablePropName="Equipped" msprop:Generator_RowDeletingName="EquippedRowDeleting" msprop:Generator_RowChangingName="EquippedRowChanging" msprop:Generator_RowEvHandlerName="EquippedRowChangeEventHandler" msprop:Generator_RowDeletedName="EquippedRowDeleted" msprop:Generator_UserTableName="Equipped" msprop:Generator_RowChangedName="EquippedRowChanged" msprop:Generator_RowEvArgName="EquippedRowChangeEvent" msprop:Generator_RowClassName="EquippedRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="chName" msprop:Generator_ColumnVarNameInTable="columnchName" msprop:Generator_ColumnPropNameInRow="chName" msprop:Generator_ColumnPropNameInTable="chNameColumn" msprop:Generator_UserColumnName="chName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="eqName" msprop:Generator_ColumnVarNameInTable="columneqName" msprop:Generator_ColumnPropNameInRow="eqName" msprop:Generator_ColumnPropNameInTable="eqNameColumn" msprop:Generator_UserColumnName="eqName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="EquipType" msprop:Generator_TableClassName="EquipTypeDataTable" msprop:Generator_TableVarName="tableEquipType" msprop:Generator_TablePropName="EquipType" msprop:Generator_RowDeletingName="EquipTypeRowDeleting" msprop:Generator_RowChangingName="EquipTypeRowChanging" msprop:Generator_RowEvHandlerName="EquipTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="EquipTypeRowDeleted" msprop:Generator_UserTableName="EquipType" msprop:Generator_RowChangedName="EquipTypeRowChanged" msprop:Generator_RowEvArgName="EquipTypeRowChangeEvent" msprop:Generator_RowClassName="EquipTypeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="eqID" msprop:Generator_ColumnVarNameInTable="columneqID" msprop:Generator_ColumnPropNameInRow="eqID" msprop:Generator_ColumnPropNameInTable="eqIDColumn" msprop:Generator_UserColumnName="eqID" type="xs:int" />
              <xs:element name="eName" msprop:Generator_ColumnVarNameInTable="columneName" msprop:Generator_ColumnPropNameInRow="eName" msprop:Generator_ColumnPropNameInTable="eNameColumn" msprop:Generator_UserColumnName="eName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="EquipTypeOf" msprop:Generator_TableClassName="EquipTypeOfDataTable" msprop:Generator_TableVarName="tableEquipTypeOf" msprop:Generator_TablePropName="EquipTypeOf" msprop:Generator_RowDeletingName="EquipTypeOfRowDeleting" msprop:Generator_RowChangingName="EquipTypeOfRowChanging" msprop:Generator_RowEvHandlerName="EquipTypeOfRowChangeEventHandler" msprop:Generator_RowDeletedName="EquipTypeOfRowDeleted" msprop:Generator_UserTableName="EquipTypeOf" msprop:Generator_RowChangedName="EquipTypeOfRowChanged" msprop:Generator_RowEvArgName="EquipTypeOfRowChangeEvent" msprop:Generator_RowClassName="EquipTypeOfRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="eqName" msprop:Generator_ColumnVarNameInTable="columneqName" msprop:Generator_ColumnPropNameInRow="eqName" msprop:Generator_ColumnPropNameInTable="eqNameColumn" msprop:Generator_UserColumnName="eqName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="eqID" msprop:Generator_ColumnVarNameInTable="columneqID" msprop:Generator_ColumnPropNameInRow="eqID" msprop:Generator_ColumnPropNameInTable="eqIDColumn" msprop:Generator_UserColumnName="eqID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="HaveSkillOf" msprop:Generator_TableClassName="HaveSkillOfDataTable" msprop:Generator_TableVarName="tableHaveSkillOf" msprop:Generator_TablePropName="HaveSkillOf" msprop:Generator_RowDeletingName="HaveSkillOfRowDeleting" msprop:Generator_RowChangingName="HaveSkillOfRowChanging" msprop:Generator_RowEvHandlerName="HaveSkillOfRowChangeEventHandler" msprop:Generator_RowDeletedName="HaveSkillOfRowDeleted" msprop:Generator_UserTableName="HaveSkillOf" msprop:Generator_RowChangedName="HaveSkillOfRowChanged" msprop:Generator_RowEvArgName="HaveSkillOfRowChangeEvent" msprop:Generator_RowClassName="HaveSkillOfRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="chName" msprop:Generator_ColumnVarNameInTable="columnchName" msprop:Generator_ColumnPropNameInRow="chName" msprop:Generator_ColumnPropNameInTable="chNameColumn" msprop:Generator_UserColumnName="chName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="skName" msprop:Generator_ColumnVarNameInTable="columnskName" msprop:Generator_ColumnPropNameInRow="skName" msprop:Generator_ColumnPropNameInTable="skNameColumn" msprop:Generator_UserColumnName="skName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="skillNum" msprop:Generator_ColumnVarNameInTable="columnskillNum" msprop:Generator_ColumnPropNameInRow="skillNum" msprop:Generator_ColumnPropNameInTable="skillNumColumn" msprop:Generator_UserColumnName="skillNum" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Skills" msprop:Generator_TableClassName="SkillsDataTable" msprop:Generator_TableVarName="tableSkills" msprop:Generator_TablePropName="Skills" msprop:Generator_RowDeletingName="SkillsRowDeleting" msprop:Generator_RowChangingName="SkillsRowChanging" msprop:Generator_RowEvHandlerName="SkillsRowChangeEventHandler" msprop:Generator_RowDeletedName="SkillsRowDeleted" msprop:Generator_UserTableName="Skills" msprop:Generator_RowChangedName="SkillsRowChanged" msprop:Generator_RowEvArgName="SkillsRowChangeEvent" msprop:Generator_RowClassName="SkillsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="skName" msprop:Generator_ColumnVarNameInTable="columnskName" msprop:Generator_ColumnPropNameInRow="skName" msprop:Generator_ColumnPropNameInTable="skNameColumn" msprop:Generator_UserColumnName="skName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="skType" msprop:Generator_ColumnVarNameInTable="columnskType" msprop:Generator_ColumnPropNameInRow="skType" msprop:Generator_ColumnPropNameInTable="skTypeColumn" msprop:Generator_UserColumnName="skType" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="skDamage" msprop:Generator_ColumnVarNameInTable="columnskDamage" msprop:Generator_ColumnPropNameInRow="skDamage" msprop:Generator_ColumnPropNameInTable="skDamageColumn" msprop:Generator_UserColumnName="skDamage" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ChampionBasic" />
      <xs:field xpath="mstns:chName" />
    </xs:unique>
    <xs:unique name="ChampionStats_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ChampionStats" />
      <xs:field xpath="mstns:chName" />
    </xs:unique>
    <xs:unique name="ChampType_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ChampType" />
      <xs:field xpath="mstns:tID" />
    </xs:unique>
    <xs:unique name="ChampTypeOf_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ChampTypeOf" />
      <xs:field xpath="mstns:chName" />
      <xs:field xpath="mstns:tID" />
    </xs:unique>
    <xs:unique name="Equipment_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Equipment" />
      <xs:field xpath="mstns:eqName" />
    </xs:unique>
    <xs:unique name="Equipped_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Equipped" />
      <xs:field xpath="mstns:chName" />
      <xs:field xpath="mstns:eqName" />
    </xs:unique>
    <xs:unique name="EquipType_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EquipType" />
      <xs:field xpath="mstns:eqID" />
    </xs:unique>
    <xs:unique name="EquipTypeOf_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EquipTypeOf" />
      <xs:field xpath="mstns:eqName" />
      <xs:field xpath="mstns:eqID" />
    </xs:unique>
    <xs:unique name="HaveSkillOf_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:HaveSkillOf" />
      <xs:field xpath="mstns:chName" />
      <xs:field xpath="mstns:skName" />
    </xs:unique>
    <xs:unique name="Skills_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Skills" />
      <xs:field xpath="mstns:skName" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__ChampType__chNam__29572725" msdata:parent="ChampionBasic" msdata:child="ChampTypeOf" msdata:parentkey="chName" msdata:childkey="chName" msprop:Generator_UserChildTable="ChampTypeOf" msprop:Generator_ChildPropName="GetChampTypeOfRows" msprop:Generator_UserRelationName="FK__ChampType__chNam__29572725" msprop:Generator_ParentPropName="ChampionBasicRow" msprop:Generator_RelationVarName="relationFK__ChampType__chNam__29572725" msprop:Generator_UserParentTable="ChampionBasic" />
      <msdata:Relationship name="FK__ChampTypeOf__tID__2A4B4B5E" msdata:parent="ChampType" msdata:child="ChampTypeOf" msdata:parentkey="tID" msdata:childkey="tID" msprop:Generator_UserChildTable="ChampTypeOf" msprop:Generator_ChildPropName="GetChampTypeOfRows" msprop:Generator_UserRelationName="FK__ChampTypeOf__tID__2A4B4B5E" msprop:Generator_ParentPropName="ChampTypeRow" msprop:Generator_RelationVarName="relationFK__ChampTypeOf__tID__2A4B4B5E" msprop:Generator_UserParentTable="ChampType" />
      <msdata:Relationship name="FK__Equipped__chName__2D27B809" msdata:parent="ChampionStats" msdata:child="Equipped" msdata:parentkey="chName" msdata:childkey="chName" msprop:Generator_UserChildTable="Equipped" msprop:Generator_ChildPropName="GetEquippedRows" msprop:Generator_UserRelationName="FK__Equipped__chName__2D27B809" msprop:Generator_ParentPropName="ChampionStatsRow" msprop:Generator_RelationVarName="relationFK__Equipped__chName__2D27B809" msprop:Generator_UserParentTable="ChampionStats" />
      <msdata:Relationship name="FK__Equipped__eqName__2E1BDC42" msdata:parent="Equipment" msdata:child="Equipped" msdata:parentkey="eqName" msdata:childkey="eqName" msprop:Generator_UserChildTable="Equipped" msprop:Generator_ChildPropName="GetEquippedRows" msprop:Generator_UserRelationName="FK__Equipped__eqName__2E1BDC42" msprop:Generator_ParentPropName="EquipmentRow" msprop:Generator_RelationVarName="relationFK__Equipped__eqName__2E1BDC42" msprop:Generator_UserParentTable="Equipment" />
      <msdata:Relationship name="FK__EquipType__eqNam__145C0A3F" msdata:parent="Equipment" msdata:child="EquipTypeOf" msdata:parentkey="eqName" msdata:childkey="eqName" msprop:Generator_UserChildTable="EquipTypeOf" msprop:Generator_ChildPropName="GetEquipTypeOfRows" msprop:Generator_UserRelationName="FK__EquipType__eqNam__145C0A3F" msprop:Generator_ParentPropName="EquipmentRow" msprop:Generator_RelationVarName="relationFK__EquipType__eqNam__145C0A3F" msprop:Generator_UserParentTable="Equipment" />
      <msdata:Relationship name="FK__EquipTypeO__eqID__15502E78" msdata:parent="EquipType" msdata:child="EquipTypeOf" msdata:parentkey="eqID" msdata:childkey="eqID" msprop:Generator_UserChildTable="EquipTypeOf" msprop:Generator_ChildPropName="GetEquipTypeOfRows" msprop:Generator_UserRelationName="FK__EquipTypeO__eqID__15502E78" msprop:Generator_ParentPropName="EquipTypeRow" msprop:Generator_RelationVarName="relationFK__EquipTypeO__eqID__15502E78" msprop:Generator_UserParentTable="EquipType" />
      <msdata:Relationship name="FK__HaveSkill__chNam__38996AB5" msdata:parent="ChampionBasic" msdata:child="HaveSkillOf" msdata:parentkey="chName" msdata:childkey="chName" msprop:Generator_UserChildTable="HaveSkillOf" msprop:Generator_ChildPropName="GetHaveSkillOfRows" msprop:Generator_UserRelationName="FK__HaveSkill__chNam__38996AB5" msprop:Generator_ParentPropName="ChampionBasicRow" msprop:Generator_RelationVarName="relationFK__HaveSkill__chNam__38996AB5" msprop:Generator_UserParentTable="ChampionBasic" />
      <msdata:Relationship name="FK__HaveSkill__skNam__398D8EEE" msdata:parent="Skills" msdata:child="HaveSkillOf" msdata:parentkey="skName" msdata:childkey="skName" msprop:Generator_UserChildTable="HaveSkillOf" msprop:Generator_ChildPropName="GetHaveSkillOfRows" msprop:Generator_UserRelationName="FK__HaveSkill__skNam__398D8EEE" msprop:Generator_RelationVarName="relationFK__HaveSkill__skNam__398D8EEE" msprop:Generator_UserParentTable="Skills" msprop:Generator_ParentPropName="SkillsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>